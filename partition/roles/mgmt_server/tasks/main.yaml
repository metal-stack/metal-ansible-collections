---
- name: Check mandatory variables for this role are set
  ansible.builtin.assert:
    fail_msg: "not all mandatory variables given, check role documentation"
    quiet: true
    that:
      - mgmt_server_asn is not none
      - mgmt_server_router_id is not none
      - mgmt_server_spine_facing_interface is not none

- name: Gather package facts
  ansible.builtin.package_facts:
    manager: auto

- name: Set hostname
  ansible.builtin.hostname:
    name: "{{ inventory_hostname }}"

# Note: systemd timedatectl does not modify /etc/timezone but /etc/localtime. This is "ok"!
- name: Apply timezone to align with the global setting
  community.general.system.timezone:
    name: UTC

- name: Set name servers to resolve dns
  ansible.builtin.template:
    src: resolved.conf.j2
    dest: /etc/systemd/resolved.conf
    mode: 0644
  notify:
    - restart systemd-resolved

- name: Install required packages to have the network stack in place
  ansible.builtin.apt:
    name:
      - net-tools
      - ipmitool
      - docker-ce
      - iptables-persistent
    update_cache: true
    force_apt_get: true

- name: Copy docker daemon.json
  ansible.builtin.template:
    src: daemon.json.j2
    dest: /etc/docker/daemon.json
    mode: 0644
  notify: reload docker

- name: Enable ipv4 forward to route packages as required
  ansible.posix.sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    sysctl_set: true
  loop:
    - key: "net.ipv6.conf.{{ mgmt_server_spine_facing_interface }}.disable_ipv6"
      value: '0'
    - key: net.ipv4.ip_forward
      value: '1'

- name: Configure forward chain to accept to route packages
  ansible.builtin.iptables:
    chain: FORWARD
    policy: ACCEPT
  notify: persist iptables

- name: Configure forward chain of docker-user to accept
  ansible.builtin.iptables:
    chain: DOCKER-USER
    jump: ACCEPT
  notify: persist iptables

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Check if FRR is installed
  ansible.builtin.set_fact:
    frr_installed: "{{ ('frr' in ansible_facts and ansible_facts.packages['frr'] == mgmt_server_frr_version) | bool }}"

- name: Import FRR installation tasks
  ansible.builtin.import_tasks: install_frr.yaml
  when: not frr_installed

- name: Render FRR conf to apply the required BGP setup
  ansible.builtin.template:
    src: frr.conf.j2
    dest: /etc/frr/frr.conf
    validate: '/usr/bin/vtysh --dryrun --inputfile %s'
    mode: 0640
  notify:
    - reload frr

- name: Flush handlers to complete the mgmt-server setup
  ansible.builtin.meta: flush_handlers

- name: Flush dhcp routes if we have a bgp session to the firewall
  ansible.builtin.command: ip route flush proto dhcp
  when: mgmt_server_firewall_ip is defined
  changed_when: true
