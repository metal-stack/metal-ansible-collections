---
- name: Check mandatory variables for this role are set
  ansible.builtin.assert:
    fail_msg: "not all mandatory variables given, check role documentation"
    quiet: yes
    that:
      - gitlab_runner_url is not none
      - gitlab_runner_token is not none
      - gitlab_runner_description is not none
      - gitlab_runner_tags is not none
      - gitlab_runner_hostpath is not none

- name: Install docker as a prerequisite to gitlabci
  ansible.builtin.apt:
    name:
    - docker.io

- name: Check if runner is already registered to avoid double registration
  ansible.builtin.command: grep -Fxq "[[runners]]" {{ gitlab_runner_hostpath }}/etc/gitlab-runner/config.toml
  register: check_runners
  failed_when: false
  check_mode: false
  changed_when: false

- name: Register runner to GitLab when no config exists
  ansible.builtin.command: /usr/bin/docker run --rm \
    -v "/run/docker/.sock:/run/docker.sock" \
    -v "{{ gitlab_runner_hostpath }}/etc/gitlab-runner:/etc/gitlab-runner" \
    -v "{{ gitlab_runner_hostpath }}/cache:/cache" \
    -v "{{ gitlab_runner_hostpath }}/ssh:/ssh" \
    '{{ gitlab_runner_image }}:{{ gitlab_runner_image_tag }}' register >
    --non-interactive
    --url '{{ gitlab_runner_url }}'
    --registration-token '{{ gitlab_runner_token }}'
    --description '{{ gitlab_runner_description }}'
    --executor docker
    --docker-image '{{ gitlab_runner_image_tag }}'
    --tag-list '{{ gitlab_runner_tags }}'
  when: check_runners.rc != 0

- name: Deploy gitlab-ci service
  ansible.builtin.include_role:
    name: metalstack.common.systemd_docker_service
  vars:
    systemd_service_name: gitlab-ci
    systemd_docker_image_name: "{{ gitlab_runner_image }}"
    systemd_docker_image_tag: "{{ gitlab_runner_image_tag }}"
    systemd_service_after: docker.service
    systemd_docker_volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "{{ gitlab_runner_hostpath }}/etc/gitlab-runner:/etc/gitlab-runner"
      - "{{ gitlab_runner_hostpath }}/cache:/cache"
      - "{{ gitlab_runner_hostpath }}/ssh:/ssh"
    systemd_docker_command:
      - run

- name: Set gitlab-runner volume config
  ansible.builtin.lineinfile:
    path: "{{ gitlab_runner_hostpath }}/etc/gitlab-runner/config.toml"
    regexp: "volumes"
    line: '    volumes = ["/gitlabci/cache:/cache","/gitlabci/ssh:/ssh"]'
    state: present
